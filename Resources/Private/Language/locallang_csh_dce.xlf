<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<xliff version="1.0">
	<file source-language="en" datatype="plaintext" original="messages" product-name="dce">
		<header/>
		<body>
            <trans-unit id="template_file.description"><source>Here you need to set the path to a template file. Template path must start with "EXT:".</source></trans-unit>
            <trans-unit id="backend_view_header_expression.description"><source><![CDATA[Here you can define a symfony expression, to define the DCE fields you want to use as header. All field variables are available.
                You can concatenate multiple fields, like this: firstName ~ ' ' ~ lastName

                With contentObject['uid'] you can access the tt_content row, to e.g. fetch the uid.
                Also the DCE instance itself is available, e.g.: dce.getTitle().
            ]]></source></trans-unit>
            <trans-unit id="detailpage_identifier.description"><source>This is the GET parameter which is checked. The given content element will render the detail template, if this request parameter is given.</source></trans-unit>
            <trans-unit id="detailpage_slug_expression.description"><source><![CDATA[Here you can define a symfony expression, to define the DCE fields you want to use as slug. All field variables are available.
                You can concatenate multiple fields, like this: firstName ~ '-' ~ lastName

                With contentObject['uid'] you can access the tt_content row, to e.g. fetch the uid.
                Also the DCE instance itself is available, e.g.: dce.getTitle().

                Keep in mind: Slugs on same page must be unique! And you need to apply an additional Routing Enhancer configuration.
            ]]></source></trans-unit>
            <trans-unit id="detailpage_title_expression.description"><source>Same as slug expression, just for the page title of the detail page. The page title get not sanitized, like the slug.</source></trans-unit>
            <trans-unit id="detailpage_use_slug_as_title.description"><source>When you've defined a slug expression for page title and enable this option, the expression is applied as page title. You can prepend, append or overwrite the current page title.</source></trans-unit>
            <trans-unit id="direct_output.description"><source>When enabled, it bypasses fluid_styled_content (lib.contentElement). This disables the "fsc-default" wrap in html output and increases performance significantly.</source></trans-unit>
            <trans-unit id="flexform_label.description"><source>Flexforms can have a separate title. The configured default LLL key points to "Contents:"</source></trans-unit>
        </body>
	</file>
</xliff>
